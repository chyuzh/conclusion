cookie:

1.document.cookie ,属性赋值是键名对应键值格式 key : value 

max-age 指cookie最长存活时间有效期,以秒为单位
expires 指定cookie过期时间 Date数据类型
path   	指定cookie的路径
domain 	指定cookie的域名
secure	指定cookie安全属性

获取当前时间
var now =new Date();

设置时间为当前时间的后一分钟(UTC时间)
now.setMinutes(now.getMinutes() + 1)

过期时间为当前时间后一分钟
document.cookie = 'gec = '+objStr+';expires = '+now.toString();

过期时间为当前时间后一分钟的UTC时间
document.cookie = 'gec1 = '+objStr+';expires = '+now.toUTCString();

获取cookie

function getCookie1(name){
	var result;
	var cookieArr = document.cookie.split(';');
	for(var i=0;i<cookieArr.length;i++){
		var temp = cookieArr[i].split('=');
		if(name == temp[0]){
			result = temp[1];
		}
		}
		return result;
	}

function getCookie2(name){
	name = name + '=';
	var offset = document.cookie.indexOf(name);
	if(offset != -1){
		offset += name.length
		var end = document.cookie.indexOf(';',offset);
		if(end == -1){
			end = document.cookie.length;
		}
		result = document.cookie.substring(offset,end);

	}
	return result;
}


存入cookie的方法

function setCookie(name,value,minutes){
	var date = new Date();
	date.setMinutes(date.getMinutes() + minutes);
	document.cookie = name + '='+value+';expires' + date.toUTCString();
}

function removeCookie(name){
	setCookie(name,'1',-1)
}


cookie 读取权限
cookie 不用域之间不能相互访问

过期时间如果不加,默认情况下为临时cookie ,关闭浏览器则失效

每个cookie  存储的数据不能超过4kb 超过返回的属性为空字符串

同一路径下的网页可以共享cookie 



webstorage

1.localstorage 		在本地永久存储数据,除非主动删除或清空
2.sessionstorage	只在回话期间有效,关闭浏览器则自动清除

.length			唯一属性,只读,代表storage键值对数量
.key(Number index)	根据下标获取storage的 键名
.getItem		根据键名获取对应value
.setItem(key,value)	为storage添加键值对
.removeItem		根据键名删除对应键值对
.clear			清空storage对象


storage也可以作为监听对象,但是是用在同域名另一个网页上

window.addEventListener('storage',function(e)){

})

JSON.parse(string)  将字符串转化成对象;
JSON.stringify(obj) 将对象转化成字符串;


___________________________________________________________________________________-

正则表达式

test方法返回一个布尔值,表示当前正则是否匹配该字符串
reg.test('Hello world')

返回匹配结果,如果匹配成功返回数组,反之返回null
reg.exec()

Regexp.$n 是正则对象的一个属性,表达式与匹配项第n个(第几组)匹配到的结果(子匹配项)

g修饰符,可以用在exec() 上,从上次匹配结束位置开始下一次匹配



元字符

.	点字符		匹配除了回车(\r)换行(\n) 行分隔符(\u2028) 段分隔符(\u2029)以外所有字符
^$	位置字符	^表示以什么开头 $表示以什么结尾
|	选择符		二选一
\	转义字符	将正则特殊含义字符转义为字面量 也使字面转化为特殊含义


字符类	[]	表示一系列可供选择的字符
脱字符	[^0-9]	表示除了0-9以外所有字符
[^]		匹配一切字符
-连字符		提供一个连续字符简写形式 [0-9]代表0到9所有数字


\d 匹配任意0-9 的数字	\D匹配0-9以外所有字符
\s 匹配不可见字符(空格 回车 换行 行或段分隔符)	\S 匹配所有可见字符
\w 匹配所有数字字母下划线 相当于[a-zA-Z0-9_]	\W 匹配数字字母下划线以外所有字符
\b 匹配字符的边界	\B 匹配非边界

重复类 贪婪

{}表示精确匹配重复的次数	{n}恰好n次 {n,}至少重复n次 {n,m}至少n次,至多m次
? 出现0次 或 1次 {0,1}
* 出现0次 或 多次 {0,}
+ 出现1次 或 多次 {1,}


贪婪 匹配<>中所有内容
/<.*>/
非贪婪	只匹配<>第一个内容
/<.*?>/


字符串中与正则表达式相关的方法

.match()返回数组,所有匹配到的字符串

.search()返回第一个满足条件结果在整个数组的位置

.replace()字符串替换匹配的值,第一个值是搜索,第二个是替换的字符串(也可以是函数)

$& 匹配到的字符串 $`匹配结果前的文本并匹配到结果前 $'匹配结果后的文本并匹配到结果后
$n 匹配成功第n组内容 	$$代表美元符号字面量

.split() 分割字符串的方法 第一个参数为分割规则 第二个是返回数组的最大长度
	 如果在规则中正则表达式中带有括号,括号内匹配到的部分也会作为数组的元素返回数组当中


