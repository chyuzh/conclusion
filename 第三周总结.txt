正则表达式

test方法返回一个布尔值,表示当前正则是否匹配该字符串
reg.test('Hello world') 

返回匹配结果,如果匹配成功返回数组,反之返回null
reg.exec()

Regexp.$n 是正则对象的一个属性,表达式与匹配项第n个(第几组)匹配到的结果(子匹配项)

g修饰符,可以用在exec() 上,从上次匹配结束位置开始下一次匹配



元字符

.	点字符		匹配除了回车(\r)换行(\n) 行分隔符(\u2028) 段分隔符(\u2029)以外所有字符
^$	位置字符	^表示以什么开头 $表示以什么结尾
|	选择符		二选一
\	转义字符	将正则特殊含义字符转义为字面量 也使字面转化为特殊含义


字符类	[]	表示一系列可供选择的字符
脱字符	[^0-9]	表示除了0-9以外所有字符
[^]		匹配一切字符
-连字符		提供一个连续字符简写形式 [0-9]代表0到9所有数字


\d 匹配任意0-9 的数字	\D匹配0-9以外所有字符
\s 匹配不可见字符(空格 回车 换行 行或段分隔符)	\S 匹配所有可见字符
\w 匹配所有数字字母下划线 相当于[a-zA-Z0-9_]	\W 匹配数字字母下划线以外所有字符
\b 匹配字符的边界	\B 匹配非边界

重复类 贪婪

{}表示精确匹配重复的次数	{n}恰好n次 {n,}至少重复n次 {n,m}至少n次,至多m次
? 出现0次 或 1次 {0,1}
* 出现0次 或 多次 {0,}
+ 出现1次 或 多次 {1,}


贪婪 匹配<>中所有内容
/<.*>/
非贪婪	只匹配<>第一个内容
/<.*?>/


字符串中与正则表达式相关的方法

.match()返回数组,所有匹配到的字符串

.search()返回第一个满足条件结果在整个数组的位置

.replace()字符串替换匹配的值,第一个值是搜索,第二个是替换的字符串(也可以是函数)

$& 匹配到的字符串 $`匹配结果前的文本并匹配到结果前 $'匹配结果后的文本并匹配到结果后
$n 匹配成功第n组内容 	$$代表美元符号字面量

.split() 分割字符串的方法 第一个参数为分割规则 第二个是返回数组的最大长度
	 如果在规则中正则表达式中带有括号,括号内匹配到的部分也会作为数组的元素返回数组当中

