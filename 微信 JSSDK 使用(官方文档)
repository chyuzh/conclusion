概述

微信JS-SDK 是微信公众平台面向网页开发者提供的基于微信内的网页开发工具包

通过使用微信JS-SDK, 网页开发者可借助微信高效地使用拍照,选图,雨欣,位置等手机系统的功能, 同事可以直接使用微信
分享,扫一扫,卡券,支付等微信特有的功能, 为微信用户提供更优质的网页体验

此文档面向网页开发者介绍微信JS-SDK如何使用及相关注意事项

JSSDK 使用步骤

步骤一: 绑定域名

先登录微信公众平台进入 '公众号设置' 的 '功能设置' 里填写 'JS接口安全域名'

备注: 登录后可在 '开发者中心' 查看对应的接口权限

步骤二: 引入JS文件

在需要调用JS接口的页面引入 如下JS文件, (支持https) http://res.wx.qq.com/open/js/jweixin-1.2.0.js

备注: 支持使用AMD/CMD 标准模块加载方法加载

步骤三: 通过config接口注入权限验证配置

// 所有需要使用JS_SDK的页面必须先注入配置信息, 否则将无法调用(同一个url仅需调用一次, 对于变化url的SPA的web app
// 可在每次url变化时进行调用, 目前Android微信客户端不支持pushState的H5新特性, 所以使用pushState来实现web app的
// 页面会导致签名失败,此问题会在Android6.2中修复)

wx.config({
    debug: true,    // 开启调试模式,调用的所有api的返回值会在客户端alert出来,若要查看传入的参数,可以在pc端
                    // 打开,参数信息会通过log打出来,尽在pc端时打印
    appId: '',       // 必填, 公众号的唯一标识

    timestamp: '',  // 必填,生成签名的时间戳

    nonceStr: '',   // 必填, 生成签名的随机串

    signatrue: '',  // 必填, 签名

    jsApiList: []   // 必填,需要使用的JS接口列表, 所有JS接口列表
})

步骤四: 通过ready接口处理成功验证

wx.ready(function(){
    // config信息验证后会执行ready方法, 所有接口调用都必须在config接口获得结果之后,config是一个客户端的
    // 异步操作, 所以如果需要在页面加载时就调用相关接口, 则须把相关接口放在ready函数中调用来确保正确执行
    // 对于用户触发时才调用的接口, 则可以直接调用, 不需要放在ready 函数中
  })

步骤五: 通过error接口处理失败验证

wx.error(function(res){
    // config信息验证失败会执行error函数, 如签名过期导致验证失败,具体错误信息可以打开config的debug模式查看,
    // 可以在返回的res参数中查看, 对于SPA可以在这里更新签名
})

-------------------

接口调用说明

所有接口通过wx对象(也可以使用jWeixin对象)来调用,参数是一个对象, 除了每个接口本身需要传的参数之外, 还有以下通用参数:

1.success: 接口调用成功时执行的回调函数

2.fail: 接口调用失败时执行的回调函数

3.complete: 接口调用完成时执行的回调函数,无论成功或失败都会执行

4.cancel: 用户点击取消时的回调函数,仅部分有用户取消操作的api才会用到

5.trigger: 监听Menu中的按钮点击时触发的方法, 该方法仅支持Menu中的相关接口

备注: 不要尝试在trigger 中使用ajax异步请求修改本次分享的内容, 因为客户端分享操作是一个同步操作, 这时候使用ajax
的回包会还没有返回

以上几个函数都带有一个参数, 类型是对象, 其中除了每个接口本身返回的数据之外, 还有一个通用属性errMsg, 其值格式
如下:

调用成功时: 'xxx:ok', 其中xxx为调用的接口名

用户取消时: 'xxx:cancel', 其中xxx为调用的接口名

调用失败时: 其值为具体错误信息

-----------------------

基础接口

判断当前客户端版本是否支持指定JS接口

wx.checkJsApi({
    jsApiList: ['chooseImage'], // 需要检测的JS接口列表

    success: function(res) {
        // 以键值对的形式返回, 可用的api值为true, 否则false

        // 如: {"checkResult": {"chooseImage": true},"errMsg":"checkJsApi:ok"}
    }
})

// checkJsApi 接口是客户端6.0.2 新引入的一个预留接口, 第一期开放的几口均可不适用checkJsApi来检测

分享接口    // 不要有诱导分享等违规行为, 对于诱导分享行为将永久回收公众号接口权限

获取"分享到朋友圈" 按钮点击状态及自定义分享内容接口

wx.onMenuShareTimeline({
    title: '',  // 分享标题

    link: '',   // 分享链接, 该链接域名或路径必须与当时页面对应的公众号JS安全域名一致

    imgUrl: '', // 分享图标

    success: function(){
        // 用户确认分享后执行的回调函数
    },

    cancel: function(){
        // 用户取消分享后执行的回调函数
    }
})

获取  "分享给朋友" 按钮点击状态及自定义分享内容接口

wx.onMenuShareAppMessage({
    title: '',  // 分享标题

    desc: '',   // 分享描述

    link: '',   // 分享链接, 该链接域名或路径必须与当时页面对应的公众号JS安全域名一致

    imgUrl: '', // 分享图标

    type: '',   // 分享类型, music, video或link, 不填写 默认link

    dataUrl: '', // 如果type时music 或 video, 则要提供数据链接, 默认为空

    success: function(){
        // 用户确认分享后执行的回调函数
    },

    cancel: function(){
        // 用户取消分享后执行的回调函数
    }
})

获取  '分享到QQ' 按钮点击状态及及自定义分享内容接口

wx.onMenuShareQQ({
    title: '',  // 分享标题

    desc: '',   // 分享描述

    link: '',   // 分享链接

    imgUrl: '', // 分享图标

    success: function(){
        // 用户确认分享后执行的回调函数
    },

    cancel: function(){
        // 用户取消分享后执行的回调函数
    }
})

获取“分享到腾讯微博”按钮点击状态及自定义分享内容接口

wx.onMenuShareWeibo({

    title: '', // 分享标题

    desc: '', // 分享描述

    link: '', // 分享链接

    imgUrl: '', // 分享图标

    success: function () {

       // 用户确认分享后执行的回调函数

    },

    cancel: function () {

        // 用户取消分享后执行的回调函数

    }

});

获取“分享到QQ空间”按钮点击状态及自定义分享内容接口

wx.onMenuShareQZone({

    title: '', // 分享标题

    desc: '', // 分享描述

    link: '', // 分享链接

    imgUrl: '', // 分享图标

    success: function () {

       // 用户确认分享后执行的回调函数

    },

    cancel: function () {

        // 用户取消分享后执行的回调函数

    }

});

图像接口

拍照或从手机相册中选图接口

wx.chooseImage({
    count: 1, // 默认9

    sizeType: ['original', 'compressed'],    //可以指定是原图或缩略图,默认两者都有

    sourceType: ['album', 'camera'].    // 可以指定来源是相册还是相机, 默认两者都有

    success: function(res){
        var localIds = res.localIds; // 返回选定照片的本地ID列表, localId 可以作为img标签的src属性显示图片
    }
})

预览图片接口

wx.previewImage({
    current: '',    // 当前显示图片的http 链接

    urls: []        // 需要预览的图片http链接列表
})

上传图片接口

wx.uploadImage({
    localId: '',    // 需要上传的图片的本地ID, 由chooseImage接口获得

    isShowProgressTips: 1,  // 默认为1, 显示进度提示

    success: function(res){
        var serverId = res.serverId;    // 返回图片的服务端ID
    }
})

// 上传图片有效期为3天, 可用微信多媒体接口下载图片到自己的服务器, 此处获得的serverId 即media_id

下载图片接口

wx.downloadImage({
    serverId: '', // 需要下载的图片的服务器端ID, 由uploadImage接口获得

    isShowProgressTips: 1,  // 默认为1, 显示进度提示

    success: function(res){
        var localId = res.localId;  // 返回图片下载后的本地ID
    }
})

获取本地图片接口

wx.getLocalImgData({
    localId: '',    // 图片的localID

    success: function(res){
        var localData = res.localData;  // localData时图片base64数据, 可以用img标签显示
    }
})

// 此接口仅在ios WKWebview 下提供, 用于兼容ios WKWebview 不支持localId 直接显示图片的问题